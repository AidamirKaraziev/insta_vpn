"""add partner and referent table

Revision ID: da367074eb8e
Revises: 9b923fb018dc
Create Date: 2023-11-22 00:04:19.240692

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "da367074eb8e"
down_revision = "9b923fb018dc"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "partner",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "referent",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("telegram_id", sa.BigInteger(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("balance", sa.Integer(), nullable=True),
        sa.Column("partner_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["partner_id"], ["partner.id"], ondelete="SET NULL"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "account", sa.Column("referent_id", sa.UUID(), nullable=True)
    )
    op.create_foreign_key(
        None,
        "account",
        "referent",
        ["referent_id"],
        ["id"],
        ondelete="SET NULL",
    )
    op.drop_column("account", "can_pay_out")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "account",
        sa.Column(
            "can_pay_out", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "account", type_="foreignkey")
    op.drop_column("account", "referent_id")
    op.drop_table("referent")
    op.drop_table("partner")
    # ### end Alembic commands ###
